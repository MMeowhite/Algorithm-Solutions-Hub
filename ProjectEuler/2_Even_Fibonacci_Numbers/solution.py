def even_fibonacci_numbers_sum(target):
	"""
		Question: Each new term in the Fibonacci sequence is generated by adding the
		previous two terms. By starting with 1 and 2, the first 10 terms will be
		1,2,3,5,8,13,21,34,55,89,...
		By considering the terms in the Fibonacci sequence whose values do not
		excceed four million, find the sum of the even-valued terms
	"""	
	sum = 0
	first_term = 1
	second_term = 2
	fibonacci_number = 0
	
	if second_term <= target and second_term % 2 ==0:
		sum += second_term
	 
	while fibonacci_number < target:
		fibonacci_number = first_term + second_term
		first_term = second_term
		second_term = fibonacci_number
		if (fibonacci_number % 2 == 0):
			sum += fibonacci_number

	return sum

if __name__ == "__main__":
	print(even_fibonacci_numbers_sum(4000000))
